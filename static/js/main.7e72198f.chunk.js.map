{"version":3,"sources":["HeaderBar.js","VideoApp.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","HeaderBar","style","position","zIndex","width","theme","mode","defaultSelectedKeys","Item","icon","SafetyCertificateOutlined","trainedDataJSON","require","nudityColor","violenceColor","nsfwMapper","getAllTimestamps","modelJSON","tagObj","nsfwArr","violenceArr","inapArr","obj","lowEnd","highEnd","i","push","console","log","createMarkers","nsfwType","counter","fullMarkerObj","markerArr","parseArr","length","markerObj","withRouter","useState","url","controls","nudeOverlay","setNude","violenceOverlay","setViolence","isPlaying","setIsPlaying","volume","setVolume","timeStart","pieData","setPieData","markers","nudObjArr","violObjArr","returnMarkerObject","className","paddingTop","left","height","gutter","marginTop","marginBottom","paddingLeft","paddingRight","flex","id","loop","onPlay","onPause","onVolume","value","onProgress","e","target","currentTime","currTime","Math","round","timestamps","nudeArray","violenceArray","includes","onDuration","duration","nudeRatio","violenceRatio","nudePercent","violentPercent","title","color","onMarkerClick","marker","textAlign","fontFamily","fontSize","data","radius","PieChart","defaultProps","lineWidth","segmentsStyle","transition","cursor","animate","label","dataEntry","percentage","labelPosition","labelStyle","fill","opacity","pointerEvents","fontWeight","webkitTextStrokeColor","viewBoxSize","App","path","exact","component","VideoApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e72198f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { SafetyCertificateOutlined } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd';\nconst { Header} = Layout;\n\nfunction HeaderBar() {\n\n  return (\n    <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div>{}\n        </div>\n        <Menu theme=\"dark\" mode=\"vertical\" defaultSelectedKeys={[\"home\"]}>\n            <Menu.Item style={{\"background\": \"#702963\"}} key=\"home\" icon={<SafetyCertificateOutlined />}>Vanilla Custard: Safe for VYou </Menu.Item>\n        </Menu>\n    </Header>\n  );\n}\n\nexport default HeaderBar;","import { Input, Row, Col, Card, Layout} from 'antd';\nimport {withRouter} from \"react-router\";\nimport React, { useState } from 'react';\nimport VideoPlayer from 'react-video-markers';\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport './styles.css';\n\nconst trainedDataJSON = require('./violencemocktrainnude.json');\n\nconst nudityColor = \"#dcd0ff\";\nconst violenceColor= \"#ff39c8\";\n\n\nconst nsfwMapper =\n    {\n        \"nudity\": nudityColor,\n        \"violence\": violenceColor\n    };\nconst noneColor=\"green\";\n\n\nfunction getAllTimestamps(modelJSON){\n    let tagObj = {};\n    let nsfwArr = [];\n    let violenceArr = [];\n    let inapArr = [];\n    for (let obj in modelJSON) {\n        let lowEnd = modelJSON[obj][\"startTime\"] - 5;\n        let highEnd = modelJSON[obj][\"endTime\"] - 5;\n        for (let i = lowEnd; i <= highEnd; i++) {\n            if(modelJSON[obj][\"nsfw_type\"] === 'nudity')\n                nsfwArr.push(i);\n            else if(modelJSON[obj][\"nsfw_type\"] === 'violence')\n                violenceArr.push(i);\n            else if(modelJSON[obj][\"nsfw_type\"] === 'sexual_content')\n               inapArr.push(i);}}\n        tagObj[\"nudity\"] = nsfwArr;\n        tagObj['violence'] = violenceArr;\n        tagObj['sexual_content'] = inapArr;\n        console.log(\"tagobj\", tagObj);\n        return tagObj;\n}\n\nfunction createMarkers(nsfwType, counter){\n  const fullMarkerObj = getAllTimestamps(trainedDataJSON);\n  console.log(\"Full\", fullMarkerObj);\n  let markerArr = [];\n  const parseArr= fullMarkerObj[nsfwType];\n  let i = 0;\n  for (i; i < parseArr.length; i++)\n      { console.log(parseArr[i]);\n      let markerObj = {};\n      counter = counter + 1;\n      markerObj[\"id\"] = counter;\n      markerObj[\"time\"] = parseArr[i];\n      markerObj[\"color\"] = nsfwMapper[nsfwType];\n      markerObj[\"title\"] = nsfwType;\n      markerArr.push(markerObj);\n      console.log(\"chicken\");\n      console.log(markerObj);}\n  console.log(markerArr);\n  return markerArr\n}\n\nfunction returnMarkerObject(){\n    let nudObjArr = createMarkers(\"nudity\", 0);\n    let violObjArr = createMarkers(\"violence\", 1000);\n    console.log(\"help\",[...nudObjArr, ...violObjArr]);\n    return [...nudObjArr, ...violObjArr];\n}\nfunction VideoApp (){\n  const [url] = useState('https://storage.cloud.google.com/vanilla-custard-bucket/nsfw_collection.mp4');\n  const [controls, setControls] = useState([\n    'play',\n    'time',\n    'progress',\n    'volume',\n    'full-screen'\n  ]);\n  const [showOverlay, setOverlay] = useState(false);\n  const [nudeOverlay, setNude] = useState(false);\n  const [violenceOverlay, setViolence] =useState(false);\n  const [inappOverlay, setInapp] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(0.7);\n  const [timeStart] = useState(0);\n  const [pieData, setPieData] = useState({});\n\n  const controlsList = [\n    {\n      id: 'play',\n      title: 'Play button'\n    },\n    {\n      id: 'time',\n      title: 'Time'\n    },\n    {\n      id: 'progress',\n      title: 'Progress'\n    },\n    {\n      id: 'volume',\n      title: 'Volume'\n    },\n    {\n      id: 'full-screen',\n      title: 'Full Screen'\n    }\n  ];\n\n  const handlePlay = () => {\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    setIsPlaying(false);\n  };\n\n  const handleControlToggle = event => {\n    let result = [...controls];\n    const name = event.target.id;\n    if (result.includes(name)) {\n      result = result.filter(item => item !== name);\n    } else {\n      result.push(name);\n    }\n    setControls(result);\n  };\n\n  const handleVolume = value => {\n    setVolume(value);\n  };\n\n  const handleProgress = e => {\n    console.log('Current time: ', e.target.currentTime);\n    let currTime = Math.round(e.target.currentTime);\n    console.log('Whole Number:', currTime);\n    let timestamps = getAllTimestamps(trainedDataJSON);\n    let nudeArray = timestamps[\"nudity\"];\n    let violenceArray = timestamps[\"violence\"];\n    if(nudeArray.includes(currTime)){\n        console.log(\"nude\");\n        setNude(true);\n        setViolence(false);}\n    else if(violenceArray.includes(currTime)){\n        console.log(\"violence\");\n        setViolence(true);\n        setNude(false);}\n    else{\n        setViolence(false);\n        setNude(false);\n        }\n    };\n\n  const handleDuration = duration => {\n      console.log('Duration: ', duration);\n      let timestamps = getAllTimestamps(trainedDataJSON);\n      let nudeArray = timestamps[\"nudity\"];\n      let violenceArray = timestamps[\"violence\"];\n      console.log(\"arrllength\", nudeArray.length);\n      const nudeRatio = nudeArray.length/duration;\n      const violenceRatio = violenceArray.length/duration;\n      console.log(\"nuderatio\", nudeRatio);\n      const nudePercent = Math.round(nudeRatio * 100);\n      console.log(\"nuddePercent\",nudePercent);\n      const violentPercent = Math.round(violenceRatio*100);\n      const safePercent = 100 - (nudePercent + violentPercent);\n      const pieData = [\n      { title: \"Nudity\", value: nudePercent, color: nudityColor },\n      { title: \"Violence\", value: violentPercent, color: violenceColor },\n      { title: \"Safe\", value: safePercent, color: \"green\" },];\n      return setPieData(pieData)\n  };\n\n  const handleMarkerClick = marker => {\n  };\n\n  const markers = returnMarkerObject();\n\n  return (\n    <div className=\"container\" style={{ paddingTop: '100px', left:'100px'}}>\n        <Layout className=\"layout\">\n        <Row height=\"100%\" gutter={0} style={{marginTop: 64, marginBottom: 50, paddingLeft: 100, paddingRight: 100}}>\n        <Col flex={1}>\n        <VideoPlayer id=\"v\"\n        url={url}\n        controls={controls}\n        isPlaying={isPlaying}\n        volume={volume}\n        loop={true}\n        markers={markers}\n        height={'360px'}\n        width={'640px'}\n        timeStart={timeStart}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onVolume={handleVolume}\n        onProgress={handleProgress}\n        onDuration={handleDuration}\n        onMarkerClick={handleMarkerClick}>\n        </VideoPlayer>\n        {nudeOverlay === true &&\n        <div className=\"fade-in\">\n            <div id=\"overlay\" style={{\"backgroundColor\": \"rgba(220, 208, 255, 0.44)\"}}></div>\n        </div> }\n        {violenceOverlay === true &&\n        <div className=\"fade-in\">\n            <div id=\"overlay\" style={{\"backgroundColor\": \"rgba(255, 57, 200, 0.57)\"}}></div>\n        </div> }\n        </Col>\n        <Col flex={2}>\n             <Card title=\"Statistical Breakdown\" style={{ width: 500, height: 360, textAlign: \"left\" }}>\n                  <Row height=\"100%\" style={{ paddingRight: 25}}>\n                      <Col flex={4}>\n                      <PieChart\n                      style={{\n                        fontFamily:\n                          '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\n                        fontSize: '8px',\n                      }}\n                      data={pieData}\n                      radius={PieChart.defaultProps.radius - 6}\n                      lineWidth={60}\n                      segmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\n                      animate\n                      label={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\n                      labelPosition={100 - 60 / 2}\n                      labelStyle={{\n                        fill: '#080808',\n                        opacity: 0.75,\n                        fontSize: \"8px\",\n                        pointerEvents: 'none',\n                        fontWeight: 'bold',\n                        webkitTextStrokeColor: 'black',\n                      }}\n                      viewBoxSize={[170, 150]}\n                    />\n                      </Col>\n                      <Col flex={1}>\n                      <h5 style={{color: nudityColor, fontWeight: \"bold\", fontSize:\"18px\"}}>Nudity</h5>\n                      <h5 style={{color: violenceColor, fontWeight: \"bold\", fontSize:\"18px\"}}>Violence</h5>\n                      <h5 style={{color: noneColor, fontWeight: \"bold\", fontSize:\"18px\"}}>Neither</h5>\n                      </Col>\n                    </Row>\n                </Card>\n        </Col>\n        </Row>\n      {/*  <div className=\"controls\">*/}\n      {/*  <p>*/}\n      {/*    Controls:*/}\n      {/*    <button onClick={isPlaying ? handlePause : handlePlay}>*/}\n      {/*      {isPlaying ? 'Pause' : 'Play'}*/}\n      {/*    </button>*/}\n      {/*  </p>*/}\n      {/*  <p>*/}\n      {/*    Show controls:*/}\n      {/*    {controlsList.map(control => {*/}\n      {/*      return (*/}\n      {/*        <label key={control.id} htmlFor={control.id}>*/}\n      {/*          <input*/}\n      {/*            id={control.id}*/}\n      {/*            type=\"checkbox\"*/}\n      {/*            checked={controls.includes(control.id)}*/}\n      {/*            onChange={handleControlToggle}*/}\n      {/*          />{' '}*/}\n      {/*          {control.title}*/}\n      {/*        </label>*/}\n      {/*      );*/}\n      {/*    })}*/}\n      {/*  </p>*/}\n      {/*</div>*/}\n      {/*<div>*/}\n      {/*  <h3>State:</h3>*/}\n      {/*  <p>*/}\n      {/*    controls: {controls.length ? '[\"' : ''}*/}\n      {/*    {controls.join('\", \"')}*/}\n      {/*    {controls.length ? '\"]' : ''}*/}\n      {/*  </p>*/}\n      {/*  <p>isPlaying: {isPlaying.toString()}</p>*/}\n      {/*  <p>showOverlay: {showOverlay.toString()}</p>*/}\n      {/*  <p>volume: {volume}</p>*/}\n      {/*  <p>timeStart: {timeStart}</p>*/}\n      {/*</div>*/}\n        </Layout>\n      </div>\n  );\n}\n\n\nexport default withRouter(VideoApp);","import React from 'react';\nimport './App.css';\nimport HeaderBar from './HeaderBar';\nimport VideoApp from './VideoApp';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {Layout} from 'antd';\n\nconst App = () => {\n    return (\n        <Layout>\n        <div className = \"App\" > < div className = \"page\" >\n            < div className = \"content\" >\n                <BrowserRouter>\n                < HeaderBar />\n                    < Route path = '/' exact = { true } component = { VideoApp }/>\n                </BrowserRouter>\n                        </div>\n                            </div>\n                                </div>\n                                </Layout>);\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}